# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QShortcut
from PyQt5.QtGui import QKeySequence
from PyQt5.QtCore import Qt
from io import StringIO
import contextlib
from about_gui import Ui_Dialog
import os
import time

class Ui_PythonIDE(object):
    def setupUi(self, PythonIDE):
        PythonIDE.setObjectName("PythonIDE")
        PythonIDE.resize(791, 588)
        PythonIDE.setStyleSheet("background-color: rgb(63, 63, 63);\n"
"selection-color: rgb(255, 255, 255);\n"
"color: rgb(255, 255, 255);")
        PythonIDE.setIconSize(QtCore.QSize(32, 32))
        PythonIDE.setToolButtonStyle(QtCore.Qt.ToolButtonTextOnly)

        self.centralwidget = QtWidgets.QWidget(PythonIDE)
        self.centralwidget.setObjectName("centralwidget")

        self.Input = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.Input.setGeometry(QtCore.QRect(10, 10, 771, 301))
        self.Input.setAutoFillBackground(True)
        self.Input.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.Input.setStyleSheet("background-color: rgb(32, 32, 32);\n"
"border-color: rgb(0, 225, 255);\n"
"border-style: solid;\n"
"border-width: 2.5px;\n"
"border-radius: 10px;\n"
"font: 10pt \"Cascadia Mono\";")
        self.Input.setObjectName("Input")

        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 350, 771, 151))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(6)
        self.frame.setMidLineWidth(6)
        self.frame.setObjectName("frame")

        self.scrollArea = QtWidgets.QScrollArea(self.frame)
        self.scrollArea.setGeometry(QtCore.QRect(0, 0, 781, 161))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 779, 159))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")

        self.Output = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.Output.setGeometry(QtCore.QRect(0, 0, 771, 151))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)

        self.Output.setFont(font)
        self.Output.setStyleSheet("background-color: rgb(75, 75, 75);\n"
"border-color: rgb(0, 225, 255);\n"
"border-style: solid;\n"
"border-width: 2.5px;\n"
"border-radius: 10px;")
        self.Output.setText("")
        self.Output.setObjectName("Output")

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.Run = QtWidgets.QPushButton(self.centralwidget)
        self.Run.setGeometry(QtCore.QRect(660, 510, 121, 31))
        self.Run.clicked.connect(self.run_input)

        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)

        self.Run.setFont(font)
        self.Run.setStyleSheet("background-color: rgb(43, 43, 43);\n"
"font: 16pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 225, 255);\n"
"border-style: solid;\n"
"border-color: rgb(0,225, 255);\n"
"border-width: 1px;\n"
"border-radius: 10px;")
        self.Run.setFlat(False)
        self.Run.setObjectName("Run")

        self.Exit = QtWidgets.QPushButton(self.centralwidget)
        self.Exit.setGeometry(QtCore.QRect(10, 510, 121, 31))
        self.Exit.clicked.connect(self.exit)

        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)

        self.Exit.setFont(font)
        self.Exit.setStyleSheet("background-color: rgb(43, 43, 43);\n"
"font: 16pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 225, 255);\n"
"border-style: solid;\n"
"border-color: rgb(0,225, 255);\n"
"border-width: 1px;\n"
"border-radius: 10px;")
        self.Exit.setObjectName("Exit")

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 315, 771, 31))
        self.line.setStyleSheet("color: rgb(255, 255, 255);")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        PythonIDE.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(PythonIDE)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 791, 21))
        self.menubar.setObjectName("menubar")

        self.menuSave = QtWidgets.QMenu(self.menubar)
        self.menuSave.setObjectName("menuSave")

        self.menuExit = QtWidgets.QMenu(self.menuSave)
        self.menuExit.setObjectName("menuExit")

        self.menuProgram = QtWidgets.QMenu(self.menubar)
        self.menuProgram.setObjectName("menuProgram")

        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")

        PythonIDE.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(PythonIDE)
        self.statusbar.setObjectName("statusbar")
        PythonIDE.setStatusBar(self.statusbar)

        self.actionSave = QtWidgets.QAction(PythonIDE)
        self.actionSave.setObjectName("actionSave")
        self.actionSave.triggered.connect(self.quick_save)

        self.actionSave_as = QtWidgets.QAction(PythonIDE)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionSave_as.triggered.connect(self.save_input)

        self.actionExit_Save = QtWidgets.QAction(PythonIDE)
        self.actionExit_Save.setObjectName("actionExit_Save")
        self.actionExit_Save.triggered.connect(self.exit)

        self.actionExit_and_Save = QtWidgets.QAction(PythonIDE)
        self.actionExit_and_Save.setObjectName("actionExit_and_Save")
        self.actionExit_and_Save.triggered.connect(self.exit_and_save)

        self.actionOpen = QtWidgets.QAction(PythonIDE)
        self.actionOpen.setObjectName("actionOpen")

        self.actionRun = QtWidgets.QAction(PythonIDE)
        self.actionOpen.triggered.connect(self.open_file)
        self.actionRun_in_file = QtWidgets.QAction(PythonIDE)
        self.actionRun_in_file.triggered.connect(self.run_input_in_file)

        self.actionRun.setObjectName("actionRun")
        self.actionAbout = QtWidgets.QAction(PythonIDE)
        self.actionRun.triggered.connect(self.run_input)

        self.actionAbout.setObjectName("actionAbout")
        

        self.menuExit.addAction(self.actionExit_Save)
        self.menuExit.addAction(self.actionExit_and_Save)

        self.menuSave.addAction(self.actionOpen)
        self.menuSave.addAction(self.actionSave)
        self.menuSave.addAction(self.actionSave_as)
        self.menuSave.addSeparator()
        self.menuSave.addAction(self.menuExit.menuAction())

        self.menuProgram.addAction(self.actionRun)
        self.menuProgram.addAction(self.actionRun_in_file)

        self.menuAbout.addAction(self.actionAbout)

        self.menubar.addAction(self.menuSave.menuAction())
        self.menubar.addAction(self.menuProgram.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(PythonIDE)
        QtCore.QMetaObject.connectSlotsByName(PythonIDE)

    def retranslateUi(self, PythonIDE):
        _translate = QtCore.QCoreApplication.translate
        PythonIDE.setWindowTitle(_translate("PythonIDE", "MainWindow"))
        self.Run.setText(_translate("PythonIDE", "Run"))
        self.Exit.setText(_translate("PythonIDE", "Exit"))
        self.menuSave.setTitle(_translate("PythonIDE", "File"))
        self.menuExit.setTitle(_translate("PythonIDE", "Exit"))
        self.menuProgram.setTitle(_translate("PythonIDE", "Program"))
        self.menuAbout.setTitle(_translate("PythonIDE", "Help"))
        self.actionSave.setText(_translate("PythonIDE", "Save (CTRL+S)"))
        self.actionSave_as.setText(_translate("PythonIDE", "Save as... (SHIFT+CTRL+S)"))
        self.actionExit_Save.setText(_translate("PythonIDE", "Exit (ESC)"))
        self.actionExit_and_Save.setText(_translate("PythonIDE", "Exit and Save (SHIFT+ESC)"))
        self.actionOpen.setText(_translate("PythonIDE", "Open (CTRL+O)"))
        self.actionRun.setText(_translate("PythonIDE", "Run (F5)"))
        self.actionRun_in_file.setText(_translate("PythonIDE", "Run in File (Shift+F5)"))
        self.actionAbout.setText(_translate("PythonIDE", "About (F9)"))

    def run_input(self):
        import subprocess
        with open("temp.py", "w") as file:
            x = self.Input.toPlainText()
            file.write(x)
        
        command = f'python temp.py'
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
        output, error = process.communicate()
        output_string = output.decode("utf-8")
        self.Output.setText(output_string)
        os.system("del temp.py")

    def run_input_in_file(self):
        try:
            with open("temp.py", "w") as file:
                content = self.Input.toPlainText()
                file.write(content)
        except Exception as ex:
            print(ex)
        
        with open("temp.py", "a") as file:
            file.write("\n# this next line was added by Florians Python IDE to prevent the script from instantly closing \ninput('Press enter to close this window')")
        os.system("python temp.py")
        time.sleep(0.3)
        os.system("del temp.py")

    def exit(self):
        self.exit()

    def quick_save(self):
        with open("input.py", "w") as f:
            output = self.Input.toPlainText()
            f.write(output)

    def exit_and_save(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Exit & Save")
        msg.setText("Would you like to Save the File before Exiting?")
        msg.setIcon(QtWidgets.QMessageBox.Question)
        msg.setStandardButtons(QtWidgets.QMessageBox.Yes|QtWidgets.QMessageBox.No)
        msg.setDefaultButton(QtWidgets.QMessageBox.Yes)
        response = msg.exec_()
        print("value of pressed message box button:", response)
        if response == 16384:
            self.save_input()
        elif response == 65536:
            self.exit()

    def save_input(self):
        widget = QtWidgets.QWidget()
        option = QFileDialog.Options()
        try:
            file=QFileDialog.getSaveFileName(widget, "Save File","input.txt","Python Files (.py)", options=option)
            with open(file[0], "w") as f:
                output = self.Input.toPlainText()
                print(output)
                f.write(output)
        except:
            pass
    
    def open_file(self):
        widget = QtWidgets.QWidget()
        option = QFileDialog.Options()
        try:
            file = QFileDialog.getOpenFileName(widget, "Open File", options=option)
            with open(file[0], "r") as f:
                x = f.read()
                self.Input.setPlainText(x)
        except Exception as e:
            print(e)

    def about_window(self):
        self.abt_window = QtWidgets.QDialog()
        self.abt_ui = Ui_Dialog()
        self.abt_ui.setupUi(self.abt_window)
        self.abt_window.show()